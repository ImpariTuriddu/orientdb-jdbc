# Connection
Connection.arrayCreationNotSupported = The creation of SQL Array is not supported
Connection.setHoldabilityNotSupported = The setting of the cursor holdability is not supported
Connection.nullDdUrl = The database URL cannot be null
Connection.emptyDbUrl = The database URL parameter cannot be empty string
Connection.nullProperties = The properties container cannot be null
Connection.wrongType = Wrong value for property ''{0}''. ''{1}'' instead of one of the allowed values: {2}
Connection.getReadOnlyFlagFromClosedObject = Cannot get the read only flag of a closed connection
Connection.setReadOnlyFlagOnClosedObject = Cannot set the read only flag of a closed connection
Connection.getAutoCommitFlagFromClosedObject = Cannot get the auto-commit flag of a closed connection
Connection.getCatalogFromClosedObject = Cannot get the catalog name of a closed connection
Connection.getClientInfoFromClosedObject = Cannot get the client info of a closed connection
Connection.statementCreationOnClosedObject = Cannot create a statement from a closed connection
Connection.getDatabaseMetaDataFromClosedObject = Cannot get the database metadata from a closed connection
Connection.getTransactionIsolationFromClosedObject = Cannot get the transaction isolation from a closed connection
Connection.preparedStatementCreationOnClosedObject = Cannot create a prepared statement from a closed connection. SQL statement:: {0}
Connection.setClientInfo = The client info setting is disabled
Connection.commitOnClosedObject = Cannot commit on a closed connection
Connection.commitOnEnabledAutoCommit = Cannot commit if the auto-commit mode is enabled
Connection.setAutoCommitOnClosedObject = Cannot set the auto-commit flag of a closed connection
Connection.rollbackOnClosedObject = Cannot rollback on a closed connection
Connection.rollbackOnEnabledAutoCommit = Cannot rollback if the auto-commit mode is enabled
Connection.badTransactionIsolationlevel = The transaction level isolation must be one fot he following values: {0}. Given value:: {1,number,integer}
Connection.cannotUnwrap = Cannot unwrap the connection because it is not a wrapper for {0}. Connection class:: {1}
# ResultSet and ResultSetMetaData
ResultSet.columnIndexOutOfLowerBound = The column index must be an integer value greater than or equal to 1. Column index = {0,number,integer}
ResultSet.columnIndexOutOfUpperBound = The column index must be an integer value less than or equal to {0,number,integer}. Column index = {1,number}
ResultSet.badFetchDirection = The fetch direction must be one of the following values: {0}. Given value:: {1,number,integer}
ResultSet.getFetchSizeFromClosedObject = Cannot get the fetch size of the result set from a closed {0,choice,0#Statement|2#Result Set} object
ResultSet.badFetchSize = The fetch size of the result set must be a non negative integer. Given value:: {0,number, integer}
ResultSet.setMaxRowsOnClosedObject = Cannot set the maximum number of result set rows of a closed {0,choice,0#Statement|2#Result Set} object
ResultSet.badMaxRows = The maximum number of result set rows must be a non negative integer. Given value:: {0, number, integer}
ResultSet.getMetadataFromClosedObject = Cannot get result set metadata from a closed {0,choice,1#Prepared Statement|2#Result Set} object
ResultSet.getHoldabilityFromClosedObject = Cannot get the holdability of the result set from a closed {0,choice,0#Statement|2#Result Set|3#Connection} object
ResultSet.badType = The result set type should be one of the following values: {0}. Given type:: {1,number,integer}
ResultSet.unsupportedType = The given result set type ({0,number,integer}) is not supported
ResultSet.badConcurrency = The concurrency level of the result set should be one of the following values: {0}. Given concurrency level:: {1,number,integer}
ResultSet.unsupportedConcurrency = The given combination of concurrency level ({0,number,integer}) and result set type ({1,number,integer}) is not supported
ResultSet.badHoldability = The cursor holdability level should be one of the following values: {0}. Given holdability:: {1,number,integer}
ResultSet.unsopportedHoldability = The given cursor holdability level ({0,number,integer}) is not supported
ResultSet.moveToFirstOnClosedObject = Cannot move to the first row of a closed result set
ResultSet.moveToFirstWhenForwardOnly = Cannot move to the first row of a forward-only result set
ResultSet.moveToLastOnClosedObject = Cannot move to the last row of a closed result set
ResultSet.moveToLastWhenForwardOnly = Cannot move to the last row of a forward-only result set
ResultSet.moveToNextOnClosedObject = Cannot move to the next row of a closed result set
ResultSet.moveToPreviousOnClosedObject = Cannot move to the previous row of a closed result set
ResultSet.moveToAfterLastOnClosedObject = Cannot move to the row after the last one of a closed result set
ResultSet.moveToAfterLastWhenForwardOnly = Cannot move to the row after the last one of a forward-only result set
ResultSet.moveToBeforeFirstOnClosedObject = Cannot move to the row before the first one of a closed result set
ResultSet.moveToBeforeFirstWhenForwardOnly = Cannot move to the row before the first one of a forward-only result set
ResultSet.moveToRelativePosOnClosedObject = Cannot move to a relative position of a closed result set
ResultSet.moveToRelativePostWhenForwardOnly = Cannot move to a relative position of a forward-only result set
ResultSet.getFetchDirectionFromClosedObject = Cannot get the fetch direction flag from a closed {0,choice,0#Statement|2#Result Set} object 
ResultSet.setFetchDirectionOnClosedObject = Cannot set the fetch direction flag of a closed {0,choice,0#statement|2#result set} object
ResultSet.incompatibleFetchDirection = Cannot use a reverse fetch direction if the result set type is forward-only
ResultSet.badAbsolutePosOnFetchForward = Cannot get the row at the absolute position {0,number,integer} because the result set if forward-only
ResultSet.moveToAbsolutePosOnClosedObject = Cannot move to the absolute position {0,number,integer} of a closed result set
ResultSet.moveToPreviousWhenForwardOnly = Cannot move to the previous row of a forward-only result set
ResultSet.getAfterLastFlagFromClosedObject = Cannot get the after-last flag from a closed result set
ResultSet.getBeforeFirstFlagFromClosedObject = Cannot get the before-first flag from a closed result set
ResultSet.getFirstFlagFromClosedObject = Cannot get the is-first flag from a closed result set
ResultSet.getLastFlagFromClosedObject = Cannot get the is-last flag from a closed result set
ResultSet.getStatementFromClosedObject = Cannot get the generating statement from a closed result set
ResultSet.getMetaDataFromClosedObject = Cannot get the metadata from a closed result set
ResultSet.deleteRowFromClosedObject = Cannot delete the current row from a closed result set
ResultSet.findColumnInClosedObject = Cannot find a column name in a closed result set
ResultSet.missingColumnLabel = The result set does not contain a column labeled ''{0}''
ResultSet.columnIndexLessThanMin = The column index cannot be less than 1. Given column index:: {0,number,integer}
ResultSet.columnIndexGreaterThanMax = The column index cannot be greater than {0,number,integer}. Given column index:: {1,number,integer}
ResultSet.getItemByIndexFromClosedObject = Cannot get an instance of {0} from a closed object. Given column index:: {1,number,integer}
ResultSet.getItemByLabelFromClosedObject = Cannot get an instance of {0} from a closed object. Given column label:: {1}
ResultSet.getItem = An error occurred during the retrieval of the value of the column labeled ''{0}''. Target class:: {1}. Row index:: {2,number,integer} 
ResultSet.getConcurrencyFromClosedObject = Cannot get the result set concurrency from a closed {0,choice,0#SQL Statement|2#Result Set} object
ResultSet.calendarIsNull = The calendar cannot be null. Column label:: {0}. Row index:: {1,number,integer}
ResultSet.getWasNullFromClosedObject = Cannot check if the column labeled ''{0}'' is null because the result set is closed
ResultSet.getRowFromClosedObject = Cannot get the row index from a closed result set
ResultSet.getTypeFromClosedObject = Cannot get the result set type from a closed {0,choice,0#Statement|2#Result Set} object
ResultSet.refreshRowOfClosedObject = Cannot refresh the row of a closed result set
ResultSet.refreshRowWhenForwardOnly = Cannot refresh row {0,number,integer} because the result set is forward-only
ResultSet.refreshRowOutOfBound = Cannot refresh the {0,choice,-1#before-first|0>=after-last} row of a result set
ResultSet.refreshMissingRow = Cannot refresh a missing row. Row index:: {0,number,integer}
ResultSet.refreshRow = An error occurred during the refresh of row {0,number,integer}
ResultSet.getRowDeletedFromClosedObject = Cannot get the ''row deleted'' flag from a closed result set
ResultSet.getRowInsertedFromClosedObject = Cannot get the ''row inserted'' flag from a closed result set
ResultSet.getRowUpdatedFromClosedObject = Cannot get the ''row updated'' flag from a closed result set
ResultSet.setFetchSizeOnClosedObject = Cannot set the fetch size of a closed {0,choice,0#Statement|2#Result Set} object
# BLOB
Blob.positionLessThanMin = The position of the first byte in the BLOB value to be extracted cannot be less than 1
Blob.negativeLength = The number of the consecutive bytes in the BLOB value to be extracted cannot be a negative number
Blob.negativeTruncationLenght = The new length of the truncated BLOB value cannot be negative
Blob.exceedingTruncationLenght = The new length of the truncated BLOB value cannot be greater than the current one {0,number}
# Wrapper
Wrapper.wrappedClassIsNull = The wrapped class/interface cannot be null
# Data Source
DataSource.driverNotAvailable = OrientDB DataSource cannot load OrientDB JDBC Driver
# PreparedStatement
PreparedStatement.parameterIndexLessThanMin = The parameter index of a SQL Prepared Statement must be equal to or greater than 1
PreparedStatement.setParameterOnClosedObject = Cannot set the parameter of a closed SQL Prepared Statement object. Parameter index:: {0}. Parameter class:: {1}.
PreparedStatement.clearParameterOnClosedObject = Cannot clear the parameters of a closed SQL Prepared Statement object
PreparedStatement.addBatchParametersOnClosedObject = Cannot set the parameters of a batch statement for a closed SQL Prepared Statement object.
# Statement
Statement.executeStatementOnClosedObject = Cannot execute the SQL statement because the SQL {0,choice,0#|1#Prepared }Statement object is closed. SQL statement:: {1}
Statement.executeQueryOnClosedObject = Cannot execute the SQL query because the SQL {0,choice,0#|1#Prepared }Statement object is closed. SQL query:: {1}
Statement.getUpdateCountFromClosedObject = Cannot get the update count from a closed SQL Statement object
Statement.getResultSetFromClosedObject = Cannot get the result set from a closed SQL Statement object
Statement.executeQueryAsUpdate = Cannot execute a SQL query as a SQL DML statement. SQL statement:: {0}
Statement.executeUpdateAsQuery = Cannot execute a SQL DML statement as a  SQL query. SQL statement:: {0}
Statement.addStatementToBatchOnClosedObject = Cannot add a statement to the batch list of a closed SQL Statement object
Statement.addStatementToBatchOnReadOnlyConnection = Cannot add a statement to the batch list of a read only connection
Statement.clearBatchOnClosedObject = Cannot clear the batch list of a closed SQL Statement object
Statement.executeBatchOnClosedObject = Cannot execute the batch list of a closed SQL Statement object
Statement.getMaxFieldSizeFromClosedObject = Cannot get the maximum field size from a closed SQL Statement object
Statement.getMaxRowsFromClosedObject = Cannot get the maximum number of result set rows from a closed SQL Statement object
Statement.getQueryTimeoutFromClosedObject = Cannot get the query timeout from a closed SQL Statement object
Statement.setEscapeProcessingOnClosedObject = Cannot set the escape processing flag on a closed SQL Statement object
Statement.executeUpdateOnReadOnlyConnection = Cannot execute SQL DML statement on a read only connection. SQL statement:: {0}
Statement.badGeneratedKeysFlag = The given generated keys flag [{0,number,integer}] is not one of the allowed values ({1})
Statement.getPoolableFromClosedObject = Cannot get the poolable flag from a closed statement
Statement.executeEmptyString = Cannot execute an empty string as a SQL statement
Statement.addEmptyStringToBatch = Cannot add an empty string to a SQL statement batch list
PreparedStatement.compileEmptyString = Cannot compile an empty string as a SQL Prepared Statement
# SQLSyntaxErrorException
Statement.syntaxError = Bad SQL syntax: {0}